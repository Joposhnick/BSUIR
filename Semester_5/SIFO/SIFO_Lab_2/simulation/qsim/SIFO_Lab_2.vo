// Copyright (C) 2021  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 21.1.0 Build 842 10/21/2021 SJ Lite Edition"

// DATE "09/09/2022 22:05:44"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module SIFO_Lab_2 (
	Y0,
	CLK,
	Y1,
	Y2,
	Y3);
output 	Y0;
input 	CLK;
output 	Y1;
output 	Y2;
output 	Y3;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Y0~output_o ;
wire \Y1~output_o ;
wire \Y2~output_o ;
wire \Y3~output_o ;
wire \CLK~input_o ;
wire \inst1~0_combout ;
wire \inst2~0_combout ;
wire \inst2~q ;
wire \inst3~0_combout ;
wire \inst3~q ;
wire \inst9~0_combout ;
wire \inst9~q ;
wire \AMOGUS~combout ;
wire \inst1~q ;


cyclonev_io_obuf \Y0~output (
	.i(\inst1~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y0~output_o ),
	.obar());
// synopsys translate_off
defparam \Y0~output .bus_hold = "false";
defparam \Y0~output .open_drain_output = "false";
defparam \Y0~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Y1~output (
	.i(\inst2~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y1~output_o ),
	.obar());
// synopsys translate_off
defparam \Y1~output .bus_hold = "false";
defparam \Y1~output .open_drain_output = "false";
defparam \Y1~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Y2~output (
	.i(\inst3~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y2~output_o ),
	.obar());
// synopsys translate_off
defparam \Y2~output .bus_hold = "false";
defparam \Y2~output .open_drain_output = "false";
defparam \Y2~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Y3~output (
	.i(\inst9~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y3~output_o ),
	.obar());
// synopsys translate_off
defparam \Y3~output .bus_hold = "false";
defparam \Y3~output .open_drain_output = "false";
defparam \Y3~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst1~0 (
// Equation(s):
// \inst1~0_combout  = !\inst1~q 

	.dataa(!\inst1~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst1~0 .extended_lut = "off";
defparam \inst1~0 .lut_mask = 64'hAAAAAAAAAAAAAAAA;
defparam \inst1~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst2~0 (
// Equation(s):
// \inst2~0_combout  = !\inst2~q 

	.dataa(!\inst2~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst2~0 .extended_lut = "off";
defparam \inst2~0 .lut_mask = 64'hAAAAAAAAAAAAAAAA;
defparam \inst2~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst2(
	.clk(!\inst1~q ),
	.d(\inst2~0_combout ),
	.asdata(vcc),
	.clrn(!\AMOGUS~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst2~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst2.is_wysiwyg = "true";
defparam inst2.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \inst3~0 (
// Equation(s):
// \inst3~0_combout  = !\inst3~q 

	.dataa(!\inst3~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst3~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst3~0 .extended_lut = "off";
defparam \inst3~0 .lut_mask = 64'hAAAAAAAAAAAAAAAA;
defparam \inst3~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst3(
	.clk(!\inst2~q ),
	.d(\inst3~0_combout ),
	.asdata(vcc),
	.clrn(!\AMOGUS~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst3~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst3.is_wysiwyg = "true";
defparam inst3.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \inst9~0 (
// Equation(s):
// \inst9~0_combout  = !\inst9~q 

	.dataa(!\inst9~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst9~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst9~0 .extended_lut = "off";
defparam \inst9~0 .lut_mask = 64'hAAAAAAAAAAAAAAAA;
defparam \inst9~0 .shared_arith = "off";
// synopsys translate_on

dffeas inst9(
	.clk(!\inst3~q ),
	.d(\inst9~0_combout ),
	.asdata(vcc),
	.clrn(!\AMOGUS~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst9~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst9.is_wysiwyg = "true";
defparam inst9.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb AMOGUS(
// Equation(s):
// \AMOGUS~combout  = (\inst1~q  & (\inst2~q  & \inst9~q ))

	.dataa(!\inst1~q ),
	.datab(!\inst2~q ),
	.datac(!\inst9~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\AMOGUS~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam AMOGUS.extended_lut = "off";
defparam AMOGUS.lut_mask = 64'h0101010101010101;
defparam AMOGUS.shared_arith = "off";
// synopsys translate_on

dffeas inst1(
	.clk(\CLK~input_o ),
	.d(\inst1~0_combout ),
	.asdata(vcc),
	.clrn(!\AMOGUS~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst1~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst1.is_wysiwyg = "true";
defparam inst1.power_up = "low";
// synopsys translate_on

assign Y0 = \Y0~output_o ;

assign Y1 = \Y1~output_o ;

assign Y2 = \Y2~output_o ;

assign Y3 = \Y3~output_o ;

endmodule
